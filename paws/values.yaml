--- 
# mysqlProxy tells paws to run a full dbProxy deployment rather than a service
mysqlProxy: true
dbProxy: 
  image: 
    name: db-proxy
    # dbProxy.image.template safely defines image:tag name in yaml
    template: "{{ .Values.dbProxy.image.name}}:{{.Values.dbProxy.image.tag }}"
deployHook: 
  host: paws-deploy-hook.tools.wmflabs.org
  # serviceAccount is the account that has the privileges to deploy PAWS
  serviceAccount: deploy
  image:
    name: deploy-hook
    # deployHook.image.template safely defines image:tag name in yaml
    template: "{{ .Values.deployHook.image.name }}:{{ .Values.deployHook.image.tag }}"
  service: 
    ports: 
      nodePort: 32612
    type: NodePort
jupyterhub: 
  proxy: 
    service: 
      nodePorts: 
        http: 32611
      type: NodePort
  auth: 
    admin: 
      users: 
        - Yuvipanda
        - BDavis_(WMF)
        - BStorm_(WMF)
        - Andrewbogott
        - Chicocvenancio
        - Zhuyifei1999
    type: mediawiki
  hub: 
    baseUrl: /
    db: 
      type: mysql
      upgrade: true
    extraVolumes:
    - name: dumps
      hostPath:
        path: /public/dumps
    # Without this, dumps becomes inaccessible and can hang the host
    - name: dumps-src1
      hostPath:
        path: /mnt/nfs/dumps-labstore1007.wikimedia.org
        type: Directory
    - name: dumps-src2
      hostPath:
        path: /mnt/nfs/dumps-labstore1006.wikimedia.org
        type: Directory
    extraVolumeMounts:
    - name: dumps
      mountPath: /public/dumps
      readOnly: true
    - name: dumps-src1
      mountPath: /mnt/nfs/dumps-labstore1007.wikimedia.org
      readOnly: true
    - name: dumps-src2
      mountPath: /mnt/nfs/dumps-labstore1006.wikimedia.org
      readOnly: true
    extraConfig: 
      myConfig: |
          import hmac
          import hashlib
          import subprocess
          import os
          from oauthenticator.mediawiki import MWOAuthenticator
          from tornado import gen
          
          class Auth(MWOAuthenticator):
              enable_auth_state = True
              def normalize_username(self, username):
                  return username
          
              @gen.coroutine
              def pre_spawn_start(self, user, spawner):
                  auth_state = yield user.get_auth_state()
                  identity = auth_state['MEDIAWIKI_USER_IDENTITY']
                  spawner.environment['ACCESS_KEY'] = auth_state['ACCESS_TOKEN_KEY']
                  spawner.environment['ACCESS_SECRET'] = auth_state['ACCESS_TOKEN_SECRET']
                  spawner.environment['CLIENT_ID'] = self.client_id
                  spawner.environment['CLIENT_SECRET'] = self.client_secret
                  spawner.environment['USER'] = identity['username']
                  # Set rather than use .extend!
                  # Since otherwise the volumes list will grow each time
                  # the spawner stops and starts!
                  homedir = '/data/project/paws/userhomes/{}'.format(identity['sub'])
                  spawner.volumes = [
                      {
                          'name': 'home',
                          'hostPath': { 'path': homedir }
                      },
                      {
                          'name': 'dumps',
                          'hostPath': { 'path': '/public/dumps' }
                      },
                      {
                          'name': 'dumps-src1',
                          'hostPath': { 'path': '/mnt/nfs/dumps-labstore1007.wikimedia.org' }
                      },
                      {
                          'name': 'dumps-src2',
                          'hostPath': { 'path': '/mnt/nfs/dumps-labstore1006.wikimedia.org' }
                      }
                  ]
                  spawner.volume_mounts = [
                      {
                          'name': 'home',
                          'mountPath': '/home/paws'
                      },
                      {
                          'name': 'dumps',
                          'mountPath': '/public/dumps'
                      },
                      {
                          'name': 'dumps-src1',
                          'mountPath': '/mnt/nfs/dumps-labstore1007.wikimedia.org'
                      },
                      {
                          'name': 'dumps-src2',
                          'mountPath': '/mnt/nfs/dumps-labstore1006.wikimedia.org'
                      },
                  ]
          
                  spawner.environment['MYSQL_HOST'] = os.environ['MYSQL_SERVICE_HOST']
                  mysql_password = hmac.new(
                      os.environ['MYSQL_HMAC_KEY'].encode('utf-8'),
                      identity['username'].encode('utf-8'),
                      hashlib.sha256
                  ).hexdigest()
                  spawner.environment['MYSQL_USERNAME'] = identity['username']
                  spawner.environment['MYSQL_PASSWORD'] = mysql_password
          c.KubeSpawner.singleuser_fs_gid = 52771
          
          c.JupyterHub.authenticator_class = Auth
          c.JupyterHub.logo_file = '/srv/jupyterhub/PAWS.svg'
          c.JupyterHub.template_vars = {
              'announcement': ('<span class="alert-success">'
                              'Welcome to PAWS. '
                              'Please <a href="//phabricator.wikimedia.org/tag'
                              '/paws/"> report any issues on Phabricator </a>'
                              '</span>')}
    extraEnv: 
      USER: tools.paws
    fsGid: 52771
    image:
      name: paws-hub-local
      tag: 327c757e3d3b
    uid: 52771
  ingress: 
    enabled: false
  singleuser: 
    fsGid: 52771
    image:
      name: singleuser-paws
      tag: latest
    memory:
      guarantee: 1G
      limit: 3G
    cpu:
      guarantee: .5
      limit: 1
    storage: 
      type: none
    uid: 52771
    lifecycleHooks:
      postStart:
        exec:
          command: ["sh", "-c", "cd /srv/paws/pwb && git fetch -t && git checkout stable || exit 0"]
    initContainers:
      - name: chown-userhome
        image: busybox
        command: ['chown', '52771:52771', '/home/paws']
        volumeMounts:
          - name: home
            mountPath: /home/paws
        securityContext: 
          runAsUser: 0
# mysql configures the wiki replica backend variables
mysql: 
  host: enwiki.analytics.db.svc.eqiad.wmflabs
  username: s52771
