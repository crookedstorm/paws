apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.deployHook.serviceAccount | quote }}
---
# In helm 3, this uses RBAC like everybody else
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: deploy-role
rules:
  - apiGroups:
    - ""
    resources:
    - bindings
    - events
    - limitranges
    - namespaces
    - namespaces/status
    - pods/log
    - pods/status
    - replicationcontrollers/status
    - resourcequotas
    - resourcequotas/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - configmaps
    - endpoints
    - pods
    - pods/portforward
    - pods/proxy
    - persistentvolumes
    - persistentvolumeclaims
    - replicationcontrollers
    - replicationcontrollers/scale
    - secrets
    - services
    - services/proxy
    verbs:
    - get
    - list
    - watch
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - apps
    resources:
    - controllerrevisions
    - daemonsets
    verbs:
    - get
    - list
    - watch
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - apps
    resources:
    - deployments
    - deployments/rollback
    - deployments/scale
    - replicasets
    - replicasets/scale
    - statefulsets
    - statefulsets/scale
    verbs:
    - get
    - list
    - watch
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    verbs:
    - get
    - list
    - watch
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - jobs
    verbs:
    - get
    - list
    - watch
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    verbs:
    - get
    - list
    - watch
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - extensions
    resources:
    - deployments
    - deployments/rollback
    - deployments/scale
    - ingresses
    - networkpolicies
    - replicasets
    - replicasets/scale
    - replicationcontrollers/scale
    verbs:
    - get
    - list
    - watch
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    - networkpolicies
    verbs:
    - get
    - list
    - watch
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    verbs:
    - get
    - list
    - watch
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - rbac.authorization.k8s.io
    resources:
    - rolebindings
    - clusterrolebindings
    - roles
    - clusterroles
    verbs:
    - create
    - get
    - list
    - patch
    - update
    - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: deploy-cluster-role
rules:
  - apiGroups:
    - ""
    resourceNames:
    - user-scheduler
    resources:
    - configmaps
    verbs:
    - get
    - update
  - apiGroups:
    - storage.k8s.io
    resources:
    - storageclasses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolume
    - persistentvolumeclaims
    verbs:
    - update
  - apiGroups:
    - rbac.authorization.k8s.io
    resources:
    - clusterrolebindings
    - clusterroles
    verbs:
    - create
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - serviceaccounts
    verbs:
    - create
    - get
    - list
    - patch
    - update
    - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: deploy-binding
subjects:
- kind: ServiceAccount
  name: {{ .Values.deployHook.serviceAccount }}
  namespace: {{ .Release.Namespace }}
roleRef:
  kind: Role
  name: deploy-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: deploy-cluster-binding
subjects:
- kind: ServiceAccount
  name: {{ .Values.deployHook.serviceAccount }}
  namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: deploy-cluster-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploy-hook
spec:
  replicas: 1
  selector:
    matchLabels:
      app: deploy-hook
  template:
    metadata:
      labels:
        name: deploy-hook
        app: deploy-hook
    spec:
      serviceAccountName: {{ .Values.deployHook.serviceAccount | quote }}
      containers:
      - name: deploy-hook
        image: {{ tpl .Values.deployHook.image.template . | quote }}
        env:
          - name: DEPLOY_HOOK_TOKEN
            value: {{ .Values.deployHook.token | quote }}
          - name: HELM_HOST
            value: tiller-deploy.kube-system.svc.cluster.local:44134
        resources:
{{ toYaml .Values.dbProxy.resources | indent 12 }}
        ports:
          - containerPort: 8888
            name: web
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.deployHook.service.name }}
spec:
  type: NodePort
  ports:
  - port: {{ .Values.deployHook.service.port }}
    protocol: TCP
    targetPort: {{ .Values.deployHook.service.port }}
    {{ if .Values.deployHook.service.ports.nodePort -}}
    nodePort: {{ .Values.deployHook.service.ports.nodePort }}
    {{- end }}
  selector:
    name: deploy-hook
