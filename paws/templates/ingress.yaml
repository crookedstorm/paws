apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Values.ingress.ns }}
  labels:
    app.kubernetes.io/name: {{ .Values.ingress.app }}
    app.kubernetes.io/part-of: {{ .Values.ingress.app }}
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: nginx-configuration
  namespace: {{ .Values.ingress.ns }}
  labels:
    app.kubernetes.io/name: {{ .Values.ingress.app }}
    app.kubernetes.io/part-of: {{ .Values.ingress.app }}
data:
  # empty for now
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: tcp-services
  namespace: {{ .Values.ingress.ns }}
  labels:
    app.kubernetes.io/name: {{ .Values.ingress.app }}
    app.kubernetes.io/part-of: {{ .Values.ingress.app }}
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: udp-services
  namespace: {{ .Values.ingress.ns }}
  labels:
    app.kubernetes.io/name: {{ .Values.ingress.app }}
    app.kubernetes.io/part-of: {{ .Values.ingress.app }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.serviceAccount }}
  namespace: {{ .Values.ingress.ns }}
  labels:
    app.kubernetes.io/name: {{ .Values.ingress.app }}
    app.kubernetes.io/part-of: {{ .Values.ingress.app }}
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: {{ .Values.clusterRole }}
  labels:
    app.kubernetes.io/name: {{ .Values.ingress.app }}
    app.kubernetes.io/part-of: {{ .Values.ingress.app }}
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - endpoints
      - nodes
      - pods
      - secrets
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - "extensions"
      - "networking.k8s.io"
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "extensions"
      - "networking.k8s.io"
    resources:
      - ingresses/status
    verbs:
      - update
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: {{ .Values.ingress.role }}
  namespace: {{ .Values.ingress.ns }}
  labels:
    app.kubernetes.io/name: {{ .Values.ingress.app }}
    app.kubernetes.io/part-of: {{ .Values.ingress.app }}
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      - "ingress-controller-leader-nginx"
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: {{ .Values.ingress.roleBinding }}
  namespace: {{ .Values.ingress.ns }}
  labels:
    app.kubernetes.io/name: {{ .Values.ingress.app }}
    app.kubernetes.io/part-of: {{ .Values.ingress.app }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ .Values.ingress.role }}
subjects:
  - kind: ServiceAccount
    name: {{ .Values.ingress.serviceAccount }}
    namespace: {{ .Values.ingress.ns }}
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: {{ .Values.ingress.clusterRoleBinding }}
  labels:
    app.kubernetes.io/name: {{ .Values.ingress.app }}
    app.kubernetes.io/part-of: {{ .Values.ingress.app }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ .Values.ingress.clusterRole }}
subjects:
  - kind: ServiceAccount
    name: {{ .Values.ingress.serviceAccount }}
    namespace: {{ .Values.ingress.ns }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.ingress.deployment.name }}
  namespace: {{ .Values.ingress.ns }}
  labels:
    app.kubernetes.io/name: {{ .Values.ingress.app }}
    app.kubernetes.io/part-of: {{ .Values.ingress.app }}
spec:
  replicas: {{ .Values.ingress.deployment.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.ingress.app }}
      app.kubernetes.io/part-of: {{ .Values.ingress.app }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.ingress.app }}
        app.kubernetes.io/part-of: {{ .Values.ingress.app }}
      annotations:
        prometheus.io/port: {{ .Values.ingress.deployment.container.metricsPort | quote }}
        prometheus.io/scrape: "true"
    spec:
      serviceAccountName: {{ .Values.ingress.serviceAccount }}
      # affinity and taints, only schedule pods in ingress nodes
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: {{ .Values.ingress.deployment.taint.key | quote }}
                operator: In
                values:
                - {{ .Values.ingress.deployment.taint.value }}
      tolerations:
      - key: {{ .Values.ingress.deployment.tolerations.key }}
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      containers:
        - name: {{ .Values.ingress.deployment.container.name }}
          image: {{ .Values.ingress.deployment.container.img | quote }}
          args:
            - /nginx-ingress-controller
            - --http-port={{ .Values.ingress.deployment.container.httpPort }}
            - --configmap=$(POD_NAMESPACE)/nginx-configuration
            - --tcp-services-configmap=$(POD_NAMESPACE)/tcp-services
            - --udp-services-configmap=$(POD_NAMESPACE)/udp-services
            - --publish-service=$(POD_NAMESPACE)/ingress-nginx
            - --annotations-prefix=nginx.ingress.kubernetes.io
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
            # www-data -> 33
            runAsUser: 33
          resources:
            requests:
              cpu: "0.5"
              memory: "1Gi"
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - name: http
              containerPort: {{ .Values.ingress.deployment.container.httpPort }}
            - name: metrics
              containerPort: {{ .Values.ingress.deployment.container.metricsPort }}
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.ingress.service.name }}
  namespace: {{ .Values.ingress.ns }}
  labels:
    app.kubernetes.io/name: {{ .Values.ingress.app }}
    app.kubernetes.io/part-of: {{ .Values.ingress.app }}
spec:
  type: NodePort
  ports:
    - name: http
      nodePort: {{ .Values.ingress.service.port }}
      port: {{ .Values.ingress.deployment.container.httpPort }}
      targetPort: {{ .Values.ingress.deployment.container.httpPort }}
      protocol: TCP
  selector:
    app.kubernetes.io/name: {{ .Values.ingress.app }}
    app.kubernetes.io/part-of: {{ .Values.ingress.app }}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
    namespace: {{ .Values.ingress.hub.ns }}
    name: {{ .Values.ingress.hub.name }}
spec:
  rules:
  - host: {{ .Values.ingress.hub.wmcloud }}
    http:
      paths:
      - backend:
          serviceName: {{ .Values.ingress.hub.serviceName }}
          servicePort: {{ .Values.ingress.hub.servicePort }}
  - host: {{ .Values.ingress.hub.wmflabs }}
    http:
      paths:
      - backend:
          serviceName: {{ .Values.ingress.hub.serviceName }}
          servicePort: {{ .Values.ingress.hub.servicePort }}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
    namespace: {{ .Values.ingress.deployHook.ns }}
    name: {{ .Values.ingress.deployHook.name }}
spec:
  rules:
  - host: {{ .Values.ingress.deployHook.wmcloud }}
    http:
      paths:
      - backend:
          serviceName: {{ .Values.deployHook.service.name }}
          servicePort: {{ .Values.deployHook.service.port }}
  - host: {{ .Values.ingress.deployHook.wmflabs }}
    http:
      paths:
      - backend:
          serviceName: {{ .Values.deployHook.service.name }}
          servicePort: {{ .Values.deployHook.service.port }}
